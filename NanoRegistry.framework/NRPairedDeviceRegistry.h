//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NRPairedDeviceRegistryXPCFrameworkDelegate.h"
#import "NSXPCConnectionDelegate.h"

@class NRFrameworkDevice, NSMutableArray, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSString, NSUUID, NSXPCConnection;

@interface NRPairedDeviceRegistry : NSObject <NRPairedDeviceRegistryXPCFrameworkDelegate, NSXPCConnectionDelegate>
{
    _Bool _xpcConnectionInterrupted;
    _Bool _xpcConnectionInvalidated;
    _Bool _hasSomeEntitlements;
    unsigned short _compatibilityState;
    unsigned long long _status;
    NSMutableArray *_devicesBlocks;
    NSMutableDictionary *_mutableDeviceDictionary;
    NSUUID *_pairingDeviceID;
    NRFrameworkDevice *_pairingDevice;
    NRFrameworkDevice *_pairedDevice;
    double _reconnectDelay;
    NSObject<OS_dispatch_queue> *_pdrQueue;
    NSObject<OS_dispatch_queue> *_deviceQueue;
    NSObject<OS_dispatch_queue> *_connectQueue;
    NSObject<OS_dispatch_queue> *_reconnectQueue;
    NSMutableArray *_finishedPairingSemaphores;
    NSXPCConnection *_xpcConnection;
    NSUUID *_clientUUID;
    long long _pairingCompatibilityVersion;
    unsigned long long _lastUnpairReason;
}

+ (id)sharedInstance;
@property(nonatomic) unsigned long long lastUnpairReason; // @synthesize lastUnpairReason=_lastUnpairReason;
@property(nonatomic) long long pairingCompatibilityVersion; // @synthesize pairingCompatibilityVersion=_pairingCompatibilityVersion;
@property(nonatomic) unsigned short compatibilityState; // @synthesize compatibilityState=_compatibilityState;
@property(retain, nonatomic) NSUUID *clientUUID; // @synthesize clientUUID=_clientUUID;
@property(nonatomic) _Bool hasSomeEntitlements; // @synthesize hasSomeEntitlements=_hasSomeEntitlements;
@property(retain, nonatomic) NSXPCConnection *xpcConnection; // @synthesize xpcConnection=_xpcConnection;
@property(retain, nonatomic) NSMutableArray *finishedPairingSemaphores; // @synthesize finishedPairingSemaphores=_finishedPairingSemaphores;
@property(nonatomic) _Bool xpcConnectionInvalidated; // @synthesize xpcConnectionInvalidated=_xpcConnectionInvalidated;
@property(nonatomic) _Bool xpcConnectionInterrupted; // @synthesize xpcConnectionInterrupted=_xpcConnectionInterrupted;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *reconnectQueue; // @synthesize reconnectQueue=_reconnectQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *connectQueue; // @synthesize connectQueue=_connectQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *deviceQueue; // @synthesize deviceQueue=_deviceQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *pdrQueue; // @synthesize pdrQueue=_pdrQueue;
@property(nonatomic) double reconnectDelay; // @synthesize reconnectDelay=_reconnectDelay;
@property(retain, nonatomic) NRFrameworkDevice *pairedDevice; // @synthesize pairedDevice=_pairedDevice;
@property(retain, nonatomic) NRFrameworkDevice *pairingDevice; // @synthesize pairingDevice=_pairingDevice;
@property(retain, nonatomic) NSUUID *pairingDeviceID; // @synthesize pairingDeviceID=_pairingDeviceID;
@property(retain, nonatomic) NSMutableDictionary *mutableDeviceDictionary; // @synthesize mutableDeviceDictionary=_mutableDeviceDictionary;
@property(retain, nonatomic) NSMutableArray *devicesBlocks; // @synthesize devicesBlocks=_devicesBlocks;
- (void).cxx_destruct;
- (void)sendDevicesUpdatedNotification;
- (void)xpcCompatibilityStateDidChange:(unsigned short)arg1 withDevice:(id)arg2 andDeviceID:(id)arg3;
@property(readonly, nonatomic) unsigned long long status; // @synthesize status=_status;
- (void)notifyStatus;
- (void)xpcStatusDidChange:(unsigned long long)arg1;
- (void)xpcLastUnpairReasonDidChange:(unsigned long long)arg1;
- (void)xpcCreateDevice:(id)arg1 deviceID:(id)arg2;
- (void)xpcDeviceDidUnpair:(id)arg1 deviceID:(id)arg2;
- (void)xpcDeviceIDDidFailToPair:(id)arg1 error:(id)arg2;
- (void)xpcDeviceDidPair:(id)arg1 deviceID:(id)arg2;
- (void)xpcHasNewOOBKey:(id)arg1;
- (void)xpcDeviceNeedsActivation:(id)arg1 deviceID:(id)arg2;
- (void)xpcDidReceiveBTPairingRequest:(id)arg1 deviceID:(id)arg2;
- (void)xpcDevice:(id)arg1 deviceID:(id)arg2 needsPasscode:(id)arg3;
- (void)xpcRemoteUnpairingDidBegin;
- (void)xpcDidBeginPairing:(id)arg1 deviceID:(id)arg2;
- (void)xpcSetValue:(id)arg1 forProperty:(id)arg2 deviceID:(id)arg3;
- (void)_xpcInvalidationHandler;
- (void)_xpcInterruptionHandler;
- (void)_xpcFrameworkInitializationSuccessWithStatus:(unsigned long long)arg1 andDevices:(id)arg2 andPairingDeviceID:(id)arg3 andPairingDevice:(id)arg4 hasEntitlements:(_Bool)arg5 andCompatibilityState:(unsigned short)arg6 andCompatibilityVersion:(long long)arg7 andLastUnpairReason:(unsigned long long)arg8;
- (_Bool)_xpcEnsureFrameworkInitialized;
- (void)_xpcInitializeConnection;
- (void)_addRemoveRecoveryStepIDSFinalize:(_Bool)arg1;
- (void)_addRemoveRecoveryStepObliterate:(_Bool)arg1 withStatePath:(id)arg2;
- (void)_addRemoveRecoveryStepResetNVRAM:(_Bool)arg1;
- (void)_addRemoveRecoveryStepICloudDeletePaymentCards:(_Bool)arg1;
- (void)_addRemoveRecoveryStepStockholmReset:(_Bool)arg1;
- (void)_addRemoveRecoveryStepIDSUnpair:(_Bool)arg1 withPairingDeviceID:(id)arg2;
- (void)_addRemoveRecoveryStepUnpairBluetooth:(_Bool)arg1 withPairingDeviceID:(id)arg2;
- (void)_addRemoveRecoveryStepDeletePairingStore:(_Bool)arg1 withPairingDeviceID:(id)arg2;
- (void)_addRemoveRecoveryStepRemoteUnpair:(_Bool)arg1 withAdvertisedName:(id)arg2 andPairedDeviceID:(id)arg3;
- (void)_addRemoveRecoveryStepIDSUnpairStart:(_Bool)arg1;
- (void)_addRemoveRecoveryStepDeleteAccounts:(_Bool)arg1;
- (void)_addRemoveRecoveryStepBackup:(_Bool)arg1 withPairingDeviceID:(id)arg2;
- (void)_addRemoveRecoveryStepDisableDaemons:(_Bool)arg1;
- (void)_setObliterationEnabled:(_Bool)arg1;
- (void)_triggerRecovery;
- (id)_recoveryDescription;
- (void)retriggerUnpairInfoDialog;
- (unsigned int)minorVersion;
- (unsigned int)majorVersion;
- (_Bool)isPaired;
- (id)pairingID;
- (id)pairingStorePath;
- (void)resumePairingClientCrashMonitoring;
- (void)suspendPairingClientCrashMonitoring;
- (void)abortPairingWithReason:(id)arg1;
- (void)abortPairing;
- (void)waitForPairingStorePathPairingID:(CDUnknownBlockType)arg1;
- (void)pairingStorePathPairingID:(CDUnknownBlockType)arg1;
- (void)_pairingStorePathPairingID:(CDUnknownBlockType)arg1;
- (void)enterCompatibilityState:(unsigned short)arg1 forDevice:(id)arg2;
- (void)unpairWithDevice:(id)arg1 shouldObliterate:(_Bool)arg2 operationHasBegun:(CDUnknownBlockType)arg3;
- (void)notifyPairingShouldContinue;
- (void)notifyPasscode:(id)arg1 forDevice:(id)arg2;
- (void)notifyActivationCompleted:(id)arg1 withSuccess:(_Bool)arg2;
- (void)gizmoPasscodeAdvertiseAndPairWithName:(id)arg1 operationHasBegun:(CDUnknownBlockType)arg2;
- (void)gizmoOOBAdvertiseAndPairWithName:(id)arg1 operationHasBegun:(CDUnknownBlockType)arg2;
- (void)companionPasscodePairWithDevice:(id)arg1 operationHasBegun:(CDUnknownBlockType)arg2;
- (void)companionOOBDiscoverAndPairWithName:(id)arg1 withOutOfBandPairingKey:(id)arg2 operationHasBegun:(CDUnknownBlockType)arg3;
- (id)getAllDevices;
- (id)getActivePairedDevice;
- (id)getDevices;
- (void)getDevicesWithBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)init;
- (void)xpcAssertInClient:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

